library(RPostgres)
library(dplyr)
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require',
user='bijansn',
password='PasswordForWRDS123')
res <- dbSendQuery(wrds, "select * from adsprate")
data <- dbFetch(res, n=10)
dbClearResult(res)
data
View(data)
res <- dbSendQuery(wrds, "select * from adsprate")
data <- dbFetch(res, n=-1)
dbClearResult(res)
View(data)
res <- dbSendQuery(wrds, "select gvkey, splticrm, datadate from adsprate")
data <- dbFetch(res, n=-1)
dbClearResult(res)
save(data, file = "[RAW] Compagny_Default.RData")
setwd("C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton")
library(RPostgres)
library(dplyr)
setwd("C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton")
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require',
user='bijansn',
password='PasswordForWRDS123')
setwd("C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton")
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require',
user='bijansn',
password='PasswordForWRDS123')
res <- dbSendQuery(wrds, "select gvkey, splticrm, datadate from adsprate")
data <- dbFetch(res, n=-1)
dbClearResult(res)
save(data, file = "/../_DATABASE/[RAW] Compagny_Default.RData")
save(data, file = "/./_DATABASE/[RAW] Compagny_Default.RData")
save(data, file = "C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton/_DATABASE/[RAW] Compagny_Default.RData")
rm(list=ls())
############
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gganimate)
library(lattice)
setwd("C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton/_CODE")
load("C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton/_DATABASE/[RAW] Compagny_Default.RData")
View(data)
View(data)
clean_data=na.omit(data)
clean_data=as_tibble(clean_data)
clean_data= clean_data  %>%
mutate(datadate=as.Date(datadate))
View(clean_data)
save(clean_data, file = "[Clean] Compagny_Default.RData")
save(clean_data, file = "C:\Users\Vida\Desktop\Thèse\Corporate Default Prediciton\_DATABASE/[Clean] Compagny_Default.RData")
numFirms= clean_data %>% count(gvkey) #5972 firms with uninterrupted monthly ratings
rm(list=ls())
################## Setup :
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gganimate)
library(lattice)
library(dplyr)
load("C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton/_DATABASE/[RAW] Compagny_Default.RData")
clean_data=na.omit(data)
clean_data=as_tibble(clean_data)
clean_data= clean_data  %>%
mutate(datadate=as.Date(datadate))
save(clean_data, file = "C:\Users\Vida\Desktop\Thèse\Corporate Default Prediciton\_DATABASE/[Clean] Compagny_Default.RData")
save(clean_data, file = "C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton/_DATABASE/[Clean] Compagny_Default.RData")
rm(list=ls())
############
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gganimate)
library(lattice)
#######################
load("Clean_Compagny_Default.RDATA")
load("C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton/_DATABASE/[Clean] Compagny_Default.RDATA")
numFirms= clean_data %>% count(gvkey) #5972 firms with uninterrupted monthly ratings
(nrow(NumDefaultedKey)/nrow(numFirms))*100 # 12% ......
load("C:/Users/Vida/Desktop/Thèse/Corporate Default Prediciton/_DATABASE/[Clean] Compagny_Default.RDATA")
#######################
# Companies (all time):
numFirms= clean_data %>%
count(gvkey)
#5972 firms with uninterrupted monthly ratings
# Number of firms who got a rating 'D' at least once
NumDefaultedKey= clean_data %>%
filter(splticrm =="D") %>%
count(gvkey) #710 firms got D (multiple times)
#default rate of the data set:
(nrow(NumDefaultedKey)/nrow(numFirms))*100 # 12% ......
clean_data$splticrm = factor(clean_data$splticrm, levels=c("AAA","AA+","AA", "AA-","A+","A","A-","BBB+","BBB","BBB-", "BB+","BB","BB-","B+","B-","B","CCC+","CCC","CCC-","CC","C","D","N.M.","SD","Suspended"))
ggplot(clean_data, aes(clean_data$splticrm, fill=clean_data$splticrm )) + #enlever fill pour colors
geom_bar() +
theme_bw()
ggplot(clean_data, aes(clean_data$splticrm )) + # colors : fill=clean_data$splticrm
geom_bar() +
theme_bw()
latestRatings= clean_data %>%
group_by(gvkey) %>%
filter(datadate==max(datadate))
View(table(latestRatings))
View(latestRatings)
latestRatings
latestRatings %>%
ggplot(aes(splticrm, fill=splticrm))+
geom_bar() +
theme_bw()
latestRatings %>%
ggplot(aes(splticrm))+ #, fill=splticrm
geom_bar() +
theme_bw()
SurvivalTime= clean_data %>%
group_by(gvkey)
View(SurvivalTime)
max(datadate)-min(datadate)
SurvivalTime= clean_data %>%
group_by(gvkey) %>%
mutate(Survival=max(datadate)-min(datadate))
View(SurvivalTime)
SurvivalTime= clean_data %>%
group_by(gvkey) %>%
mutate(Survival=difftime(max(datadate),min(datadate)))
View(SurvivalTime)
Survivaltime= function(latest_date,earliest_date){
ld=  as.POSIXct(latest_date)
ed = as.POSIXct(earliest_date)
12 * (ed$year - sd$year) + (ed$mon - sd$mon)
}
Survivaltime("27-06-1994","10-10-2020")
Survivaltime(27-06-1994,10-10-2020)
View(clean_data)
Survivaltime(1994-06-27,2020-10-10)
Survivaltime("1994-06-27","2020-10-10)
Survivaltime("1994-06-27","2020-10-10")
SurvivalTime= clean_data %>%
Survivaltime("1994-06-27","2020-10-10")
as.POSIXct(1994-06-27)
as.POSIXct("1994-06-27")
ld= as.POSIXct("1994-06-27")
ld* 12
ld= as.POSIXct("1994-06-27")
ld= as.POSIXlt("1994-06-27")
ld
ld= as.POSIXlt(as.Date("1994-06-27"))
ld
Sys.time()
elapsed_months <- function(end_date, start_date) {
ed <- as.POSIXlt(end_date)
sd <- as.POSIXlt(start_date)
12 * (ed$year - sd$year) + (ed$mon - sd$mon)
}
>Sys.time()
elapsed_months(Sys.time(), as.Date("2012-07-15"))
survival_time= function(latest_date,earliest_date){
ld=  as.POSIXlt(latest_date)
ed = as.POSIXlt(earliest_date)
12 * (ld$year - ed$year) + (ld$mon - ed$mon)
}
survival_time(Sys.time(), as.Date("2012-07-15"))
Survivaltime("1994-06-27","2020-10-10")
Survivaltime(as.Date(1994-06-27),as.Date(2020-10-10))
Survivaltime(as.Date("1994-06-27),as.Date("2020-10-10"))
Survivaltime(as.Date("1994-06-27"),as.Date("2020-10-10"))
Survivaltime(as.Date("1994-06-27"),as.Date("2020-10-10"))
survival_time(as.Date("1994-06-27"),as.Date("2020-10-10"))
survival_time_fc= function(latest_date,earliest_date){
ld=  as.POSIXlt(latest_date)
ed = as.POSIXlt(earliest_date)
12 * (ld$year - ed$year) + (ld$mon - ed$mon)
}
survival_time_fc= function(latest_date,earliest_date){
ld=  as.POSIXlt(latest_date)
ed = as.POSIXlt(earliest_date)
12 * (ld$year - ed$year) + (ld$mon - ed$mon)
}
SurvivalTime= clean_data %>%
group_by(gvkey) %>%
mutate(Survival=survival_time_fc(max(datadate),min(datadate)))
View(SurvivalTime)
SurvivalTime= clean_data %>%
group_by(gvkey) %>%
mutate(Survival=survival_time_fc(max(datadate),min(datadate)))%>%
#  the most recent year shown only
filter(datadate==max(datadate))
View(SurvivalTime)
ggplot(clean_data, aes(clean_data$splticrm )) + # colors : fill=clean_data$splticrm
geom_bar() +
theme_bw()
View(latestRatings)
clean_data %>%
filter(splticrm =="D") %>%
mutate(Defaulted_Binary= '1')
View(clean_data)
# Number of firms who got a rating 'D' at least once
NumDefaultedKey= clean_data %>%
filter(splticrm =="D") %>%
count(gvkey) #710 firms got D (multiple times)
View(NumDefaultedKey)
NumDefaultedKey= clean_data %>%
filter(splticrm =="D") %>%
mutate(Default_bool=as.factor('1'))
View(NumDefaultedKey)
View(NumDefaultedKey)
View(clean_data)
NumDefaultedKey= clean_data %>%
filter(splticrm =="D") %>%
group_by(gvkey) %>%
mutate(Default_bool=as.factor('1'))
View(NumDefaultedKey)
NewData= right_join(clean_data,NumDefaultedKey , by = c("gvkey" = "gvkey"))
View(NewData)
rm(list=ls())
##################### Setup :
library(RPostgres)
library(dplyr)
setwd("C:/Users/Vida/Desktop/Th?se/Corporate Default Prediciton/_CODE")
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require',
user='bijansn',
password='PasswordForWRDS123')
res <- dbSendQuery(wrds, "select gvkey, splticrm, datadate from adsprate")
data <- dbFetch(res, n=-1)
dbClearResult(res)
save(data, file = "C:/Users/Vida/Desktop/Th?se/Corporate Default Prediciton/_DATABASE/[RAW] Compagny_Default.RData")
save(data, file = "./_DATABASE/[RAW] Compagny_Default.RData")
