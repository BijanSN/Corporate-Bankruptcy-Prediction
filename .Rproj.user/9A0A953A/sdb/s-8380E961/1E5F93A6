{
    "collab_server" : "",
    "contents" : "################################\n#Step 3 : Exploratory data analysis\n################################\n#rm(list=ls())\n##############\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(gganimate)\nlibrary(lattice)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tibble)\nlibrary(magrittr)\n################################\n#Local functions :\n\nsurvival_time_fc= function(latest_date,earliest_date){\n  ld=  as.POSIXlt(latest_date)\n  ed = as.POSIXlt(earliest_date)\n  12 * (ld$year - ed$year) + (ld$mon - ed$mon)\n}\n\n################################\nload(\"./_DATABASE/[Clean] Compagny_Default.RDATA\")\n################################\n######    Key Numbers  #########\n\n#5972 unique firms with uninterrupted monthly ratings\n#710 unique defaults\nDefault_rate= 710/5972 #0.1189 => 11.82% \n\n#time frame = [1981-2017]\n\n\n# Number of companies (all time) and number of occurences :\nnumFirms= clean_data %>% \n  count(gvkey) \n\n\n################################\n####################\n########## Ratings : \n\n#every ratings :\n\nt_ratings_all= table(clean_data$ratings) #total ratings of the data sets\n\nggplot(clean_data, aes(clean_data$ratings )) + # colors : fill=clean_data$splticrm\n  geom_bar() +\n  theme_bw() \n\n## last compagny date ratings :\n\nlatest_data= clean_data %>%\n  group_by(gvkey)       %>%\n  filter(datadate==max(datadate)) \n\nggplot(latest_data, aes(latest_data$ratings ))+\n  geom_bar() +\n  theme_bw() \n\n\n# first compagny date ratings  : remove Ds's data?\nfirst_data= clean_data %>%\n  group_by(gvkey)      %>%\n  filter(datadate==min(datadate)) \n\nggplot(first_data, aes(first_data$ratings ))+\n  geom_bar() +\n  theme_bw() \n\n\n#####################\n##########Companies :\n\n############ Determine if the compagny defaulted (at least) once or not. and if so how many times.\n\nNumDefaultedKey= clean_data %>%\n                 filter(splticrm ==\"D\") %>%\n                 # Number of firms who got a rating 'D' at least once: \n                 count(gvkey) #710 firms got D (multiple times)\n\n\nNumDefaultedKey= clean_data %>%\n  group_by(gvkey)           %>%\n  filter(ratings ==\"D\")    %>%\n  # Number of firms who got a rating 'D' *at least* once: \n  count(gvkey) #710 firms got D (multiple times)\n\n\n########## merge with clean_data : \n\nNumDefaultedKey<-clean_data %>%\n                 separate_rows(gvkey, sep=\",\") \n\n\nUpdated_data= clean_data %>%\n              mutate(bool= ifelse(.$ratings=='D',1,0)) #%>% # create a new column \"bool\" =1 if the compagny defaulted\n              #filter(.$bool= max(bool))\n\n\n\n\n\n\n\n\n\n\ntest =Updated_data %>%\n      group_by(gvkey) %>%\n      summarise()  %>%\n      summarise(count= ifelse(.$splticrm==\"D\",1,0))\n\n\n\n\n\n\n#https://www.computerworld.com/article/2486425/business-intelligence-4-data-wrangling-tasks-in-r-for-advanced-beginners.html?page=4\n\n\n#ifelse doesn't work on factors/date\n#http://mgimond.github.io/ES218/Week03a.html#combining_table_manipulation_functions_using_%%\n\n\n# \n# Updated_data= clean_data %>%\n#               group_by(gvkey) %>%\n#               summarise(\n#                 bool= ifelse(.$splticrm=='D',1,0))\n# \n# \n# \n\n\n\n\n\nclean_data %>%\n  group_by(gvkey) %>%\n  add_column(default_bool2= defaulted_fc(.$splticrm))\n\n\n\n\n\n\n################ from gvkey to TICKER :\n  #https://stackoverflow.com/questions/58983691/how-to-add-a-tibble-column-based-on-information-from-another-tibble\n  #convert id from character to number\n  NumDefaultedKey$gvkey<-as.integer(NumDefaultedKey$gvkey)\n  \n  #join tables\n  newstats<-left_join(clean_data,NumDefaultedKey, by=c(\"gvkey\" = \"id\"))\n\n\n  #make untidy\n  newstats %>%\n    group_by(year) %>%\n    summarize(model_id = paste0(model_id, collapse = \",\"), name=paste0(name, collapse = \",\")) \n\n\n\n\n\n\n\nNewData= merge(clean_data,NumDefaultedKey, by = c(\"gvkey\" ,\"gvkey\"))\n\n? merge\n\n#default rate of the data set:\n(nrow(NumDefaultedKey)/nrow(numFirms))*100 # 11.89 % ......\n\n\n#PLOTS\n\nclean_data$splticrm = factor(clean_data$splticrm, levels=c(\"AAA\",\"AA+\",\"AA\", \"AA-\",\"A+\",\"A\",\"A-\",\"BBB+\",\"BBB\",\"BBB-\", \"BB+\",\"BB\",\"BB-\",\"B+\",\"B-\",\"B\",\"CCC+\",\"CCC\",\"CCC-\",\"CC\",\"C\",\"D\",\"N.M.\",\"SD\",\"Suspended\"))\n\nggplot(clean_data, aes(clean_data$splticrm )) + # colors : fill=clean_data$splticrm\n  geom_bar() +\n  theme_bw() \n\n# +\n# transition_states(\n#   clean_data$datadate,\n#   transition_length = 2,\n#   state_length = 1\n# ) +\n# ease_aes('sine-in-out')\n#anim_save(\"animated-barplot-transition.gif\")\n\n\n##############\n\nggplot(clean_data, aes(clean_data$splticrm )) +\n  geom_bar() +\n  theme_bw() \n\n\n\n\n\n\nclean_data = clean_data %>%\n  group_by(gvkey) %>% \n  filter(datadate==max(datadate))\n\n\n\n\n\n\nlatestRatings= clean_data %>%\n  group_by(gvkey) %>% \n  filter(datadate==max(datadate))\n\nlatestRatings %>%\n  ggplot(aes(splticrm))+ #, fill=splticrm\n  geom_bar() +\n  theme_bw() \n\n\n\n\n\n\n#Survival time in  months :\n\nSurvivalTime= clean_data %>% \n  group_by(gvkey) %>% \n  mutate(Survival_Time=survival_time_fc(max(datadate),min(datadate)))%>% \n  #  the most recent year shown only\n  filter(datadate==max(datadate))\n\n",
    "created" : 1602350787093.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "941861834",
    "id" : "1E5F93A6",
    "lastKnownWriteTime" : 1602468283,
    "last_content_update" : 1602468283,
    "path" : "C:/Users/Vida/Desktop/Th√®se/Corporate Default Prediciton/_CODE/3. EDA.R",
    "project_path" : "_CODE/3. EDA.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}